name: Python Unit Testing

on: [push]

jobs:
  Test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Cache virtualenv
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: ./tweet-venv/
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Create virtualenv and install dependencies
        run: |
          python -m venv tweet-venv && source ./tweet-venv/bin/activate && python -m pip install -r requirements.txt
        if: steps.cache.cache-venv.outputs.cache-hit != 'true'
      - name: Run setup script for develop
        run: |
          source ./tweet-venv/bin/activate && python setup.py develop
      - name: Test with pytest
        env:
          API_KEY: ${{secrets.API_KEY}}
          API_SECRET_KEY: ${{secrets.API_SECRET_KEY}}
          BEARER_TOKEN: ${{secrets.BEARER_TOKEN}}
          ACCESS_TOKEN: ${{secrets.ACCESS_TOKEN}}
          ACCESS_TOKEN_SECRET: ${{secrets.ACCESS_TOKEN_SECRET}}
        run: |
          source ./tweet-venv/bin/activate && pytest   
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          

